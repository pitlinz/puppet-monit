#!/bin/bash
#template from http://www.juliux.de/nagios-plugin-vorlage-bash

<%- if @warnlimit -%>
WARN_LIMIT=<%= @warnlimit %>
<%- else -%>
WARN_LIMIT=1
<%- end %>
<%- if @critlimit -%>
CRIT_LIMIT=<%= @critlimit %>
<%- else -%>
CRIT_LIMIT=16
<%- end %>

MDFILTER=*
if [ "$1" -eq "$1" ] 2>/dev/null; then
	# -eq expects integers just pipe error msg to /dev/null	
	MDFILTER=$1
else
	BASENAME=`basename $0`
	PART=`echo $BASENAME | cut -f3 -d'-'`	
	if [ "$PART" -eq "$PART" ] 2>/dev/null; then
		MDFILTER=$PART
	fi
fi
if [ "$1" == "autofix" -o "$2" == "autofix" ]; then
	AUTOFIX=1
else
	AUTOFIX=0
fi


DATA=0
for file in /sys/block/md${MDFILTER}/md/mismatch_cnt; do
	(( DATA += `cat $file`))
    MD_NAME=`echo $file | awk 'BEGIN { FS = "/" } ; { print $4 }'`
    PERF_DATA+="$MD_NAME=`cat $file` "
    if [ $AUTOFIX -gt 0 ]; then
    	if [ `cat $file` -gt $WARN_LIMIT ]; then
    		MDDIR=`dirname $file`
    		echo repair >${MDDIR}/sync_action
    	fi 	 
    fi  
done

if [ $DATA -lt $WARN_LIMIT ]; then
        echo "OK - all software raid mismatch_cnts are smaller than $WARN_LIMIT | $PERF_DATA"
        exit 0;
fi
if [ $DATA -ge $WARN_LIMIT ] && [ $DATA -lt $CRIT_LIMIT ]; then
        echo "WARNING - software raid mismatch_cnts are greater or equal than $WARN_LIMIT | $PERF_DATA"
        exit 1;
fi
if [ $DATA -ge $CRIT_LIMIT ]; then
        echo "CRITICAL - software raid mismatch_cnts are greater or equal than $CRIT_LIMIT | $PERF_DATA"
        exit 2;
fi




## to fix mismatch_cnts:
# echo repair >/sys/block/md0/md/sync_action
# watch cat /proc/mdstat
#
# echo check >/sys/block/md0/md/sync_action
# watch cat /proc/mdstat

